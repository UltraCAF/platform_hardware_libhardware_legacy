From ef4f85ffb52fc738fc3ff23127a194a5c4441e9c Mon Sep 17 00:00:00 2001
From: Steve Kondik <shade@chemlab.org>
Date: Thu, 20 Dec 2012 20:39:18 -0800
Subject: [PATCH] wifi: Add support for AP module args

 * Needed for Samsung's goofy handling of AP mode

Change-Id: I5ec65460b7c9f8ef34170473cf1bdaa36587767b
---
 include/hardware_legacy/wifi.h |  5 +++++
 wifi/Android.mk                |  3 +++
 wifi/wifi.c                    | 18 ++++++++++++++++++
 3 files changed, 26 insertions(+)

diff --git a/include/hardware_legacy/wifi.h b/include/hardware_legacy/wifi.h
index a60718d..fbca81e 100644
--- a/include/hardware_legacy/wifi.h
+++ b/include/hardware_legacy/wifi.h
@@ -145,6 +145,11 @@ const char *wifi_get_fw_path(int fw_type);
 int wifi_change_fw_path(const char *fwpath);
 
 /**
+ * Set the wifi mode (0 = normal, 1 = ap)
+ */
+int wifi_set_mode(int mode);
+
+/**
  * Check and create if necessary initial entropy file
  */
 #define WIFI_ENTROPY_FILE	"/data/misc/wifi/entropy.bin"
diff --git a/wifi/Android.mk b/wifi/Android.mk
index 32e0e32..c06a39c 100644
--- a/wifi/Android.mk
+++ b/wifi/Android.mk
@@ -6,6 +6,9 @@ endif
 ifdef WIFI_DRIVER_MODULE_ARG
 LOCAL_CFLAGS += -DWIFI_DRIVER_MODULE_ARG=\"$(WIFI_DRIVER_MODULE_ARG)\"
 endif
+ifdef WIFI_DRIVER_MODULE_AP_ARG
+LOCAL_CFLAGS += -DWIFI_DRIVER_MODULE_AP_ARG=\"$(WIFI_DRIVER_MODULE_AP_ARG)\"
+endif
 ifdef WIFI_DRIVER_MODULE_NAME
 LOCAL_CFLAGS += -DWIFI_DRIVER_MODULE_NAME=\"$(WIFI_DRIVER_MODULE_NAME)\"
 endif
diff --git a/wifi/wifi.c b/wifi/wifi.c
index 009fa88..8a10ff1 100644
--- a/wifi/wifi.c
+++ b/wifi/wifi.c
@@ -82,6 +82,7 @@ static struct wpa_ctrl *monitor_conn;
 
 /* socket pair used to exit from a blocking read */
 static int exit_sockets[2];
+static int wifi_mode = 0;
 
 static char primary_iface[PROPERTY_VALUE_MAX];
 // TODO: use new ANDROID_SOCKET mechanism, once support for multiple
@@ -97,6 +98,9 @@ struct genl_family *nl80211;
 #ifndef WIFI_DRIVER_MODULE_ARG
 #define WIFI_DRIVER_MODULE_ARG          ""
 #endif
+#ifndef WIFI_DRIVER_MODULE_AP_ARG
+#define WIFI_DRIVER_MODULE_AP_ARG       ""
+#endif
 #ifndef WIFI_FIRMWARE_LOADER
 #define WIFI_FIRMWARE_LOADER		""
 #endif
@@ -124,6 +128,7 @@ static const char DRIVER_MODULE_NAME[]  = WIFI_DRIVER_MODULE_NAME;
 static const char DRIVER_MODULE_TAG[]   = WIFI_DRIVER_MODULE_NAME " ";
 static const char DRIVER_MODULE_PATH[]  = WIFI_DRIVER_MODULE_PATH;
 static const char DRIVER_MODULE_ARG[]   = WIFI_DRIVER_MODULE_ARG;
+static const char DRIVER_MODULE_AP_ARG[] = WIFI_DRIVER_MODULE_AP_ARG;
 #endif
 static const char FIRMWARE_LOADER[]     = WIFI_FIRMWARE_LOADER;
 static const char DRIVER_PROP_NAME[]    = "wlan.driver.status";
@@ -308,8 +313,16 @@ int wifi_load_driver()
     }
 
 #ifdef SAMSUNG_WIFI
+#ifdef WIFI_DRIVER_MODULE_AP_ARG
+    if (wifi_mode == 1) {
+        snprintf(module_arg2, sizeof(module_arg2), DRIVER_MODULE_AP_ARG);
+    } else {
+        snprintf(module_arg2, sizeof(module_arg2), DRIVER_MODULE_ARG);
+    }
+#else
     char* type = get_samsung_wifi_type();
     snprintf(module_arg2, sizeof(module_arg2), "%s%s", DRIVER_MODULE_ARG, type == NULL ? "" : type);
+#endif
 
     if (insmod(DRIVER_MODULE_PATH, module_arg2) < 0) {
 #else
@@ -1129,3 +1142,8 @@ int wifi_change_fw_path(const char *fwpath)
     close(fd);
     return ret;
 }
+
+int wifi_set_mode(int mode) {
+    wifi_mode = mode;
+    return 0;
+}
